// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-preset-zapier compiles JSX 1`] = `"React.createElement(Foo, null);"`;

exports[`babel-preset-zapier doesn't compile ES modules to commonjs 1`] = `"import Foo from 'foo';"`;

exports[`babel-preset-zapier doesn't strip proptypes when not in prod env 1`] = `
"const Baz = props => React.createElement(\\"div\\", props);

Baz.propTypes = {
  className: PropTypes.string
};"
`;

exports[`babel-preset-zapier given a target option produces the appropriate configuration for browser 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        Array [
          "emotion",
          Object {
            "labelFormat": "[filename]--[local]",
            "sourceMap": true,
          },
        ],
      ],
    },
    "production": Object {
      "plugins": Array [
        "transform-react-remove-prop-types",
        "graphql-tag",
      ],
    },
    "test": Object {
      "plugins": Array [
        "dynamic-import-node",
      ],
    },
  },
  "overrides": Array [
    Object {
      "presets": Array [
        Array [
          "@babel/preset-env",
          Object {
            "modules": false,
            "targets": Object {
              "browsers": Array [
                "last 4 Chrome major versions",
                "last 4 Firefox major versions",
                "last 2 Safari major versions",
                "last 3 Edge major versions",
                "last 4 ChromeAndroid major versions",
                "last 2 iOS major versions",
              ],
            },
          },
        ],
        "@babel/preset-react",
        Array [
          "@babel/preset-typescript",
          Object {
            "allExtensions": true,
            "isTSX": true,
            "onlyRemoveTypeImports": true,
          },
        ],
      ],
      "test": /\\\\\\.tsx\\?\\$/,
    },
  ],
  "plugins": Array [
    "@babel/plugin-syntax-dynamic-import",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-transform-classes",
    "react-hot-loader/babel",
  ],
  "presets": Array [
    Array [
      "@babel/preset-env",
      Object {
        "modules": false,
        "targets": Object {
          "browsers": Array [
            "last 4 Chrome major versions",
            "last 4 Firefox major versions",
            "last 2 Safari major versions",
            "last 3 Edge major versions",
            "last 4 ChromeAndroid major versions",
            "last 2 iOS major versions",
          ],
        },
      },
    ],
    "@babel/preset-react",
    "@babel/preset-flow",
  ],
}
`;

exports[`babel-preset-zapier given a target option produces the appropriate configuration for node 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [],
    },
    "production": Object {
      "plugins": Array [
        "transform-react-remove-prop-types",
        "graphql-tag",
      ],
    },
    "test": Object {
      "plugins": Array [
        "dynamic-import-node",
      ],
    },
  },
  "overrides": Array [
    Object {
      "presets": Array [
        Array [
          "@babel/preset-env",
          Object {
            "modules": "commonjs",
            "targets": Object {
              "node": "current",
            },
          },
        ],
        "@babel/preset-react",
        Array [
          "@babel/preset-typescript",
          Object {
            "allExtensions": true,
            "isTSX": true,
            "onlyRemoveTypeImports": true,
          },
        ],
      ],
      "test": /\\\\\\.tsx\\?\\$/,
    },
  ],
  "plugins": Array [
    "@babel/plugin-syntax-dynamic-import",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-class-properties",
    "react-hot-loader/babel",
  ],
  "presets": Array [
    Array [
      "@babel/preset-env",
      Object {
        "modules": "commonjs",
        "targets": Object {
          "node": "current",
        },
      },
    ],
    "@babel/preset-react",
    "@babel/preset-flow",
  ],
}
`;

exports[`babel-preset-zapier parses nullish coalescing for JS 1`] = `"const foo = undefined !== null && undefined !== void 0 ? undefined : 'default';"`;

exports[`babel-preset-zapier parses optional chaining 1`] = `
"var _tester$bar, _tester$bar$baz;

const tester = {
  bar: {
    baz: {
      testing: 'this'
    }
  }
};
const foo = tester === null || tester === void 0 ? void 0 : (_tester$bar = tester.bar) === null || _tester$bar === void 0 ? void 0 : (_tester$bar$baz = _tester$bar.baz) === null || _tester$bar$baz === void 0 ? void 0 : _tester$bar$baz.testing;"
`;

exports[`babel-preset-zapier strips flow annotations 1`] = `"function greet(name) {}"`;

exports[`babel-preset-zapier transpiles TS 1`] = `"const x = 7;"`;

exports[`babel-preset-zapier transpiles TSX 1`] = `
"import * as React from 'react';
export function Thing(props) {
  return React.createElement(\\"h1\\", null, props.foo);
}"
`;

exports[`babel-preset-zapier transpiles TSX with emotion jsx pragma 1`] = `
"/** @jsx jsx */
import { css, jsx } from '@emotion/core';
const styles = process.env.NODE_ENV === \\"production\\" ? {
  name: \\"tbsp7d-foo--styles\\",
  styles: \\"display:block;label:foo--styles;\\"
} : {
  name: \\"tbsp7d-foo--styles\\",
  styles: \\"display:block;label:foo--styles;\\",
  map: \\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvby50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR3FCIiwiZmlsZSI6ImZvby50c3giLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIC8qKiBAanN4IGpzeCAqL1xuICAgICAgaW1wb3J0IHsgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbiAgICAgIGNvbnN0IHN0eWxlcyA9IGNzcyh7XG4gICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICB9KTtcblxuICAgICAgaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgICAgIGZvbzogbnVtYmVyO1xuICAgICAgfVxuXG4gICAgICBleHBvcnQgZnVuY3Rpb24gVGhpbmcocHJvcHM6IElQcm9wcykge1xuICAgICAgICByZXR1cm4gPGgxIGNzcz17c3R5bGVzfT57cHJvcHMuZm9vIGFzIHN0cmluZ308L2gxPjtcbiAgICAgIH1cbiAgICAiXX0= */\\"
};
export function Thing(props) {
  return jsx(\\"h1\\", {
    css: styles
  }, props.foo);
}"
`;

exports[`babel-preset-zapier transpiles TSX with isolateComponent pragma 1`] = `
"// @jsx isolateComponent
export function Thing(props) {
  return isolateComponent(\\"h1\\", null, props.foo);
}"
`;

exports[`babel-preset-zapier transpiles TSX with type keyword 1`] = `""`;

exports[`babel-preset-zapier transpiles class properties 1`] = `
"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

let Bork = function Bork() {
  _classCallCheck(this, Bork);

  _defineProperty(this, \\"x\\", 'bar');

  _defineProperty(this, \\"y\\", void 0);
};

_defineProperty(Bork, \\"a\\", 'foo');

_defineProperty(Bork, \\"b\\", void 0);"
`;

exports[`babel-preset-zapier transpiles classes 1`] = `
"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\"value\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

let Test = /*#__PURE__*/function () {
  function Test(name) {
    _classCallCheck(this, Test);

    this.name = name;
  }

  _createClass(Test, [{
    key: \\"logger\\",
    value: function logger() {
      console.log(\\"Hello\\", this.name);
    }
  }]);

  return Test;
}();"
`;

exports[`babel-preset-zapier transpiles object rest spread 1`] = `
"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const foo = {
  bar: 'baz'
};

const test = _objectSpread({}, foo);"
`;

exports[`babel-preset-zapier when on production env strips proptypes when in prod env 1`] = `"const Baz = props => React.createElement(\\"div\\", props);"`;

exports[`babel-preset-zapier when on test env compiles to commonjs modules in test environment 1`] = `"import Foo from 'foo';"`;

exports[`babel-preset-zapier when on test env produce the appropriate configuration 1`] = `
Object {
  "env": Object {
    "development": Object {
      "plugins": Array [
        Array [
          "emotion",
          Object {
            "labelFormat": "[filename]--[local]",
            "sourceMap": true,
          },
        ],
      ],
    },
    "production": Object {
      "plugins": Array [
        "transform-react-remove-prop-types",
        "graphql-tag",
      ],
    },
    "test": Object {
      "plugins": Array [
        "dynamic-import-node",
      ],
    },
  },
  "overrides": Array [
    Object {
      "presets": Array [
        Array [
          "@babel/preset-env",
          Object {
            "modules": "commonjs",
            "targets": Object {
              "browsers": Array [
                "last 4 Chrome major versions",
                "last 4 Firefox major versions",
                "last 2 Safari major versions",
                "last 3 Edge major versions",
                "last 4 ChromeAndroid major versions",
                "last 2 iOS major versions",
              ],
            },
          },
        ],
        "@babel/preset-react",
        Array [
          "@babel/preset-typescript",
          Object {
            "allExtensions": true,
            "isTSX": true,
            "onlyRemoveTypeImports": true,
          },
        ],
      ],
      "test": /\\\\\\.tsx\\?\\$/,
    },
  ],
  "plugins": Array [
    "@babel/plugin-syntax-dynamic-import",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-transform-classes",
    "babel-plugin-require-context-hook",
    "react-hot-loader/babel",
  ],
  "presets": Array [
    Array [
      "@babel/preset-env",
      Object {
        "modules": "commonjs",
        "targets": Object {
          "browsers": Array [
            "last 4 Chrome major versions",
            "last 4 Firefox major versions",
            "last 2 Safari major versions",
            "last 3 Edge major versions",
            "last 4 ChromeAndroid major versions",
            "last 2 iOS major versions",
          ],
        },
      },
    ],
    "@babel/preset-react",
    "@babel/preset-flow",
  ],
}
`;
